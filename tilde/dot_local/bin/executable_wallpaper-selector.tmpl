#!/bin/sh

# Help text
HELP_TEXT='
A script to easily select a wallpaper based on the theme.
It makes use of waypaper and darkman to do the heavy lifting.

Options:
  -h, --help
	Show this help message and exit.

  -r, --random
	Select a random wallpaper.

  -l, --light
	Select a light wallpaper, mutually exclusive with the -d, --dark flag.

  -d, --dark
	Select a dark wallpaper, mutually exclusive with the -l, --light flag.

  -m, --monitors-off
	Handle the situation where the monitors are powered off.

	This is mainly used with the script automatically ran by darkman,
	since the monitors might be powered off, which causes waypaper to fail
	when setting the wallpaper.
'

# Reset all variables that might be set
random=
theme=
handle_monitors_off=

# Parse the arguments given
while :; do
	case $1 in

	# If the argument is for the help command, show the help and exit
	-h | -\? | --help)
		echo "$HELP_TEXT"
		exit
		;;

	# If the random flag is passed, set the random variable to true
	-r | --random)
		random=true
		;;

	# If the light flag is passed,
	# set the theme to light if it is not already set
	-l | --light)
		if [ -z "$theme" ]; then
			theme="light"
		fi
		;;

	# If the dark flag is passed,
	# set the theme to dark if it is not already set
	-d | --dark)
		if [ -z "$theme" ]; then
			theme="dark"
		fi
		;;

	# Handle the case when the monitors are off
	-m | --monitors-off)
		handle_monitors_off=true
		;;

	# End of all options, stop parsing
	--)
		shift
		break
		;;

	# Unknown option
	-?*)
		printf 'Warning: Unknown option "%s" ignored\n' "$1" >&2
		;;

	# Default case
	*)
		break
		;;
	esac

	# Go to the next argument
	shift
done

# If the theme hasn't been set, get the theme from darkman
if [ -z $theme ]; then
	theme=$(darkman get)
fi

# Set the wallpaper directory
wallpaper_base_directory='{{ joinPath .chezmoi.workingTree "wallpapers" }}'
wallpaper_directory="$wallpaper_base_directory/$theme/"

# Initialise whether swaylock is active
swaylock_active=

# If handling the monitors being off is wanted
if [ "$handle_monitors_off" = true ]; then

	# Get whether swaylock is active
	swaylock_active=$(pgrep -x 'swaylock')

	# If swaylock is active
	if [ -n "$swaylock_active" ]; then

		# Power on the monitors because that means
		# the system has been locked and has gone to sleep.
		#
		# This is required because waypaper needs an active monitor
		# to set the wallpaper and will fail without it
		niri msg action power-on-monitors
	fi
fi

# If the random flag is passed, call waypaper to select a random wallpaper
if [ "$random" = true ]; then
	waypaper --folder "$wallpaper_directory" --random

# Otherwise, call waypaper to interactively select a wallpaper
else
	waypaper --folder "$wallpaper_directory"
fi

# If swaylock was active, power off the monitors again
if [ -n "$swaylock_active" ]; then
	niri msg action power-off-monitors
fi

# vi: ft=sh tabstop=4 shiftwidth=4
