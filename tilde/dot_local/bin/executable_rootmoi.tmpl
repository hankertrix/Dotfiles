#!/bin/sh

# Script to execute chezmoi as root to manage the / folder

# References:
# https://github.com/felipecrs/dotfiles/blob/master/home/dot_local/bin/executable_rootmoi.tmpl
# https://github.com/00sapo/dotfiles/blob/main/home/dot_local/bin/empty_executable_rootmoi.tmpl

# Get all the paths to chezmoi files
# {{ $configDir := joinPath .chezmoi.homeDir ".config/rootmoi" }}
# {{ $rootConfigFile := joinPath $configDir "root-chezmoi.toml" }}
# {{ $efiConfigFile := joinPath $configDir "efi-chezmoi.toml" }}
# {{ $persistentStateFile := joinPath $configDir "chezmoistate.boltdb" }}
# {{ $cacheDir := joinPath .chezmoi.homeDir ".cache/rootmoi" }}

# If the chezmoi executable is available, use it
if [ -f '{{ .chezmoi.executable }}' ]; then
	executable='{{ .chezmoi.executable }}'

# Otherwise, use the path returned by the system
else
	executable=$(command -v chezmoi)
fi

# Ensure that the configuration and cache directories are created.
#
# Shell check is disabled here as the variables
# are chezmoi template variables, not shell variables.
# shellcheck disable=SC2016
mkdir -p '{{ $configDir }}' '{{ $cacheDir }}'

# Execute chezmoi as root, also known as rootmoi
PATH=$PATH sudo "${executable}" "$@" \
	--config='{{ $rootConfigFile }}' \
	--persistent-state='{{ $persistentStateFile }}' \
	--cache='{{ $cacheDir }}'

# Execute chezmoi once more as root for the efi directory
# so the proper umask can be set for the FAT32 file system
# and actual changes to the files are correctly identified,
# instead of always detecting the file mode as a change
PATH=$PATH sudo "${executable}" "$@" \
	--config='{{ $efiConfigFile }}' \
	--persistent-state='{{ $persistentStateFile }}' \
	--cache='{{ $cacheDir }}'

# vi: ft=sh
