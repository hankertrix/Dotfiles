version: 2
root-markers:
  - ".git/"
lint-debounce: 1s

tools:
  ruff: &ruff
    prefix: "ruff"
    lint-source: "efm/ruff"
    lint-command: >
      ruff check --stdin-filename "${INPUT}"
    lint-stdin: true
    lint-formats:
      - "%.%#:%l:%c: %t%n %m"
    format-command: >
      ruff format --line-length 80 --no-cache --stdin-filename "${INPUT}"
    format-stdin: true
    root-markers:
      - "pyproject.toml"
      - "setup.py"
      - "requirements.txt"
      - "ruff.toml"

  ruff-sort: &ruff-sort
    format-command: >
      ruff check --select I --fix --stdin-filename "${INPUT}"
    format-stdin: true
    root-markers:
      - "pyproject.toml"
      - "setup.py"
      - "requirements.txt"
      - "ruff.toml"

  eslint_d: &eslint_d
    prefix: "eslint_d"
    lint-source: "efm/eslint_d"
    lint-command: >
      eslint_d --no-color --format visualstudio --stdin-filename \
        "${INPUT}" --stdin
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-formats:
      - "%f(%l,%c): %trror %m"
      - "%f(%l,%c): %tarning %m"
    root-markers:
      - ".eslintrc"
      - ".eslintrc.cjs"
      - ".eslintrc.js"
      - ".eslintrc.json"
      - ".eslintrc.yaml"
      - ".eslintrc.yml"
      - "package.json"

  prettierd: &prettierd
    format-command: >
      prettierd '${INPUT}' ${--range-start=charStart} ${--range-end=charEnd} \
        ${--tab-width=tabWidth} ${--use-tabs=!insertSpaces}
    format-stdin: true
    root-markers:
      - ".prettierrc"
      - ".prettierrc.json"
      - ".prettierrc.js"
      - ".prettierrc.yml"
      - ".prettierrc.yaml"
      - ".prettierrc.json5"
      - ".prettierrc.mjs"
      - ".prettierrc.cjs"
      - ".prettierrc.toml"
      - "prettier.config.js"
      - "prettier.config.cjs"
      - "prettier.config.mjs"

  stylua: &stylua
    format-command: >
      stylua --color Never \
        ${--range-start:charStart} ${--range-end:charEnd} \
          --stdin-filepath ${INPUT} -
    format-can-range: true
    format-stdin: true
    root-markers:
      - "stylua.toml"
      - ".stylua.toml"

  shellcheck: &shellcheck
    prefix: "shellcheck"
    lint-source: "efm/shellcheck"
    lint-command: "shellcheck --color=never --format=gcc -"
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - "-:%l:%c: %trror: %m"
      - "-:%l:%c: %tarning: %m"
      - "-:%l:%c: %tote: %m"
    root-markers: []

  shfmt: &shfmt
    format-command: "shfmt -filename '${INPUT}' -"
    format-stdin: true

  markdownlint: &markdownlint
    prefix: "markdownlint"
    lint-source: "efm/markdownlint"
    lint-command: "markdownlint --stdin"
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c %m"
      - "%f:%l %m"
      - "%f: %l: %m"

  gitlint: &gitlint
    prefix: "gitlint"
    lint-source: "efm/gitlint"
    lint-command: "gitlint"
    lint-stdin: true
    lint-formats:
      - '%l: %m: "%r"'
      - "%l: %m"

  cspell: &cspell
    prefix: "cspell"
    lint-source: "efm/cspell"
    lint-command: >
      cspell --no-color --no-progress --no-summary "${INPUT}"
    lint-ignore-exit-code: true
    lint-stdin: false
    lint-severity: 4 # Severity: hint
    lint-formats:
      - "%f:%l:%c - %m"
      - "%f:%l:%c %m"

languages:
  python:
    - <<: *ruff
    - <<: *ruff-sort

  html:
    - <<: *prettierd

  css:
    - <<: *prettierd

  javascript:
    - <<: *eslint_d
    - <<: *prettierd

  javascriptreact:
    - <<: *eslint_d
    - <<: *prettierd

  typescript:
    - <<: *eslint_d
    - <<: *prettierd

  typescriptreact:
    - <<: *eslint_d
    - <<: *prettierd

  svelte:
    - <<: *eslint_d
    - <<: *prettierd

  vue:
    - <<: *eslint_d
    - <<: *prettierd

  json:
    - <<: *prettierd

  yaml:
    - <<: *prettierd

  lua:
    - <<: *stylua

  sh:
    - <<: *shellcheck
    - <<: *shfmt

  markdown:
    - <<: *markdownlint
    - <<: *prettierd

  gitcommit:
    - <<: *gitlint

  # Wildcard, matches all languages
  =:
    - <<: *cspell
